@import url("https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400;700&display=swap");

*,
*::before,
*::after {
  box-sizing: border-box;
}

*:focus {
  outline: 3px #e5d4ed dashed;
  outline-offset: 2px;
  transition: outline 150ms ease-in-out;
}

html {
  height: auto;
  min-height: 100vh;
}

body {
  display: flex;
  align-items: center;
  flex-direction: column;
  height: 100%;
  width: 100%;
  min-height: 100vh;
  font: 100%/1.5 "Dancing Script", cursive;
  color: #e5d4ed;
  background-color: #6d72c3;
}

div.wrapper {
  height: 100%;
  width: 100%;
  max-width: 1400px;
}

header {
  display: flex;
  justify-content: center;
  padding: 1.5rem 1rem;
  background-color: #1d1128;
}

h1 {
  width: 120px;
  height: 72px;
  text-indent: -9999px;
  background-image: url(../icons/logo.jpg);
  background-size: contain;
  border-radius: 9999px;
  box-shadow: 0px 0px 20px 5px #6d72c3;
}

main {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 2rem;
  padding: 4rem;
}

form {
  position: relative;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  width: 100%;
  max-width: 32rem;
  padding: 1rem;
  font-size: 1.75rem;
}

form.error-message::before {
  content: "tarefa deve conter caracteres visÃ­veis";
  font-size: 1.75rem;
  position: absolute;
  bottom: calc(100% - 0.5rem);
  color: #1d1128;
  border-bottom: 3px solid #f08080;
}

form > input,
form > button {
  width: 100%;
}

input[type="text"],
form > button {
  font: inherit;
  font-weight: 700;
}

form > button {
  text-transform: uppercase;
  letter-spacing: 2px;
}

form > button:active {
  transform: scale(0.95);
}

input,
button {
  padding: 0.5rem;
  text-align: center;
  font-size: 3.75rem;
  border: none;
  border-radius: 0.3rem;
  cursor: pointer;
}

button {
  font-weight: 700;
  color: #5941a9;
  background-color: #eee;
  background-size: contain;
}

section {
  width: 100%;
}

h2 {
  margin-bottom: 1rem;
  padding-bottom: 0.5rem;
  font-size: 2.3rem;
  font-weight: 700;
  color: inherit;
  text-align: center;
  text-transform: uppercase;
  border-bottom: 2px solid;
}

.filters-wrapper {
  margin-bottom: 1rem;
}

.filters {
  display: flex;
  align-items: center;
  max-width: 100%;
}

.filters > fieldset {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  width: max-content;
}

.filters > fieldset > span {
  display: block;
  width: 100%;
}

.filters__title {
  margin-bottom: 0.5rem;
  text-align: center;
  font-weight: 700;
  text-transform: uppercase;
}

.filters__option {
  display: flex;
  align-items: center;
  gap: 0.25rem;
}

.filters__option:not(:nth-of-type(1)) {
  margin-top: 0.5rem;
}

.filters__option > input {
  position: relative;
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  width: 2.625rem;
  height: 2.625rem;
  border: 3px solid #1d1128;
  background-color: #e5d4ed;
}

.filters__option > input::after {
  content: "";
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%) scale(0.5);
  display: block;
  width: 1.4rem;
  height: 1.4rem;
  background-color: #5941a9;
  border-radius: 0.1rem;
  opacity: 0;
  transition: all 400ms ease-in-out;
}

.filters__option > input:checked::after {
  transform: translate(-50%, -50%) scale(1) rotate(1800deg);
  opacity: 1;
}

ul {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
  gap: 1rem;
  width: 100%;
}

li {
  flex: 1 0 20rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  gap: 1rem;
  width: 100%;
  min-width: 20rem;
  max-width: 70%;
  padding: 1.5rem 1rem;
  background-color: #1d1128;
  box-shadow: 0px 0px 8px #000;
  border-radius: 0.5rem;
  transition: all 300ms ease-in-out;
}

li:hover {
  transform: scale(1.015);
  background-color: #1d1128e6;
  box-shadow: 0px 0px 10px #000;
}

h3 {
  padding: 0.5rem;
  text-align: center;
  font-size: 2.1rem;
  word-break: break-all;
}

li > div,
.modal__buttons {
  position: relative;
  display: flex;
  justify-content: center;
  gap: 0.5rem;
  width: 100%;
  max-width: 12.25rem;
}

li > div::before {
  content: "";
  position: absolute;
  top: -0.5rem;
  width: 100%;
  border-top: 2px solid #e5d4ed;
}

li > div > *,
#apply-change,
#cancel-change {
  width: 3.5rem;
  height: 3.5rem;
  border-radius: 50%;
  background-color: #e5d4ed;
  background-repeat: no-repeat;
  background-position: center;
  background-size: 80%;
  transition: all 300ms ease-in-out;
}

li > div > *:hover,
#apply-change:hover,
#cancel-change:hover {
  background-color: hsla(281, 41%, 88%, 0.8);
}

li > div > button:nth-of-type(1) {
  background-image: url(../icons/edit.svg);
}

li > div > button:nth-of-type(2),
#cancel-change {
  background-image: url(../icons/delete.svg);
}

input[type="checkbox"] {
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  background-color: #eee;
  margin: 0;
}

input[type="checkbox"]:checked,
#apply-change {
  background-image: url(../icons/done.svg);
}

input[type="checkbox"]:not(:checked) {
  background-color: #f08080;
}

.modal-wrapper {
  display: none;
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

.bg-img {
  width: 100%;
  height: 100%;
  background-color: transparent;
  backdrop-filter: blur(1px);
}

.modal {
  position: fixed;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  width: 80%;
  max-width: 30rem;
  padding: 1.5rem 1rem;
  background-color: #5941a9;
  border: 2px solid #1d1128;
  border-radius: 0.5rem;
  box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.8);
  z-index: 2;
}

.modal .modal__input {
  font-size: 1.75rem;
  max-width: 100%;
}

.modal__buttons {
  max-width: 7.875rem;
}

.remove-completed {
  display: none;
  position: fixed;
  left: 1rem;
  bottom: 1rem;
}

.remove-completed > button {
  width: 2.625rem;
  height: 2.625rem;
  text-indent: -9999px;
  border-radius: 50%;
  background-image: url(../icons/delete.svg);
  animation-duration: 1.3s;
  animation-name: pulse;
  animation-iteration-count: infinite;
}

@keyframes pulse {
  from {
    transform: scale(1);
  }

  50% {
    transform: scale(1.3);
  }

  to {
    transform: scale(1);
  }
}

@media screen and (min-width: 764px) {
  .filters > fieldset {
    flex-direction: row;
  }

  .filters__title {
    margin-bottom: 0;
    margin-right: 1rem;
  }

  .filters__option:not(:nth-of-type(1)) {
    margin-top: 0;
    margin-left: 1rem;
  }

  h1 {
    width: 12%;
    padding-top: 7%;
  }

  li {
    max-width: calc(100% / 2 - 1rem);
  }
}
